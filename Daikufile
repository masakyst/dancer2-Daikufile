
use YAML;
use Template;

# add enviroments/production.yml
# deploy app server directory
#appdir: /home/masakyst/app/HelloWorld
#user: masakyst
#group: masakyst
#psgifile: app.psgi
#port: 5000
#perl_version: perl-5.18
#perlbrew_home: /home/masakyst


namespace dancer2 => sub {
    desc 'dancer2 scaffold';
    task scaffold => sub {
    };
};

namespace create => sub {

    desc 'create app.psgi';
    task psgi => sub {
        sh q(cp ./bin/app.pl app.psgi);
        sh q(chmod 0644 app.psgi);
        sh q(perl -pi -e 's/\.\.\/lib/lib/g' app.psgi);
        unless (-e 'cpanfile') {
            sh q(curl -o cpanfile https://raw.githubusercontent.com/masakyst/dancer2-Daikufile/master/cpanfile);
        } 
    };

    desc 'create initd script';
    task initd => sub {
        my %merged_config = (
            %{ YAML::LoadFile('config.yml') },
            %{ YAML::LoadFile('environments/production.yml') }
        );
        my $tt = Template->new;
        {
            unless (-e 'init.d/script.tt') {
                sh q(mkdir -p init.d);
                sh q(curl -o init.d/script.tt https://raw.githubusercontent.com/masakyst/centos-initd-psgi-template/master/script.tt);
            }
            my $output_script;
            $tt->process('init.d/script.tt', \%merged_config, \$output_script);
            open my $fh, '>', 'init.d/'.$merged_config{appname} or die qw/Can't open file: $!/;
            print $fh $output_script;
            close $fh;
        }
        {
            unless (-e 'logrotate.d/logrotate.tt') {
                sh q(mkdir -p logrotate.d);
                sh q(curl -o logrotate.d/logrotate.tt https://raw.githubusercontent.com/masakyst/centos-initd-psgi-template/master/logrotate.tt);
            }
            my $output_logrotate;
            $tt->process('logrotate.d/logrotate.tt', \%merged_config, \$output_logrotate);
            open my $fh, '>', 'logrotate.d/'.$merged_config{appname} or die qw/Can't open file: $!/;
            print $fh $output_logrotate;
            close $fh;
        }
    };

};


namespace deploy => sub {
    desc 'deploy first setup';
    task setup => sub {
        my ($task, @args) = @_; 
        my %merged_config = (
            %{ YAML::LoadFile('config.yml') },
            %{ YAML::LoadFile('environments/production.yml') }
        );
        sh qw(sudo cp ./init.d/$merged_config{appname} /etc/init.d/);
        sh qw(sudo /sbin/chkconfig --add $merged_config{appname});
        sh qw(sudo cp ./logrotate.d/$merged_config{appname} /etc/logrotate.d/);
    };    
};


